{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"script","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-08-10T21:08:19.561591Z\",\"iopub.execute_input\":\"2024-08-10T21:08:19.562024Z\",\"iopub.status.idle\":\"2024-08-10T21:08:33.930376Z\",\"shell.execute_reply.started\":\"2024-08-10T21:08:19.561988Z\",\"shell.execute_reply\":\"2024-08-10T21:08:33.929166Z\"}}\nimport matplotlib.pyplot as plt\nimport cv2\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2024-08-10T21:00:21.395488Z\",\"iopub.execute_input\":\"2024-08-10T21:00:21.395921Z\",\"iopub.status.idle\":\"2024-08-10T21:00:21.404982Z\",\"shell.execute_reply.started\":\"2024-08-10T21:00:21.395889Z\",\"shell.execute_reply\":\"2024-08-10T21:00:21.403882Z\"}}\ndef crop_square_resize(img, size=None, interpolation=cv2.INTER_AREA):\n    if not size:\n        print('image not cropped nor resized')\n        return img\n    h, w = img.shape[:2]\n    min_size = np.amin([h,w])\n    crop_img = img[int(h/2-min_size/2):int(h/2+min_size/2), int(w/2-min_size/2):int(w/2+min_size/2)]\n    resized = cv2.resize(crop_img, (size, size), interpolation=interpolation)\n    return resized\n\n\ndef read_plot_image(image_path, size=None, **kwargs):    \n    flags = kwargs.get('flags', 1)\n    image = cv2.imread(image_path, flags=flags)\n    image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n    image = crop_square_resize(image, size)\n    plt.imshow(image)\n    plt.axis('off')\n    plt.title(f'size: {image.shape}', loc='left')\n    plt.show()\n    \n    \n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-08-10T22:11:33.982071Z\",\"iopub.execute_input\":\"2024-08-10T22:11:33.983400Z\",\"iopub.status.idle\":\"2024-08-10T22:11:33.997201Z\",\"shell.execute_reply.started\":\"2024-08-10T22:11:33.983360Z\",\"shell.execute_reply\":\"2024-08-10T22:11:33.995865Z\"}}\ndef plot_wrong_pred(dataset, y_true, preds, subplot_row_col=(20, 20), figsize=(40, 40), fname=None, take=-1):\n    wrong_pred_idx = preds==y_true\n    count = 0\n    figure, axes = plt.subplots(subplot_row_col[0], subplot_row_col[1], figsize=figsize)\n    axes = list(axes.flatten())\n    ax_gen = iter(axes)\n    n_title = 0\n    \n    for images, labels in valid_set.take(take):\n        for image, label in zip(images, labels):\n            if not wrong_pred_idx[count]:\n                try:\n                    ax = next(ax_gen)\n                    ax.imshow(image)\n                    ax.axis('off')\n                    n_title += 1\n                    ax.set_title(f'{n_title}: MALE' if label.numpy()==1 else f'{n_title}: FEMALE')\n                except StopIteration:\n                    print('Out of axis')\n                    break\n            count += 1\n    while True:\n        try:\n            ax = next(ax_gen)\n            ax.axis('off')\n        except StopIteration:\n            break\n            \n    plt.tight_layout()\n    plt.savefig(fname, dpi=300, format='png')\n    plt.close()","metadata":{"_uuid":"292051c5-4cdf-4f0d-820a-c330e20b1567","_cell_guid":"0926c4de-7271-4e06-9c41-44d110f83752","collapsed":false,"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":4,"outputs":[{"traceback":["\u001b[0;36m  Cell \u001b[0;32mIn[4], line 1\u001b[0;36m\u001b[0m\n\u001b[0;31m    if not wrong_pred_idx[count]:\u001b[0m\n\u001b[0m                                 ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m incomplete input\n"],"ename":"SyntaxError","evalue":"incomplete input (3982273063.py, line 1)","output_type":"error"}]}]}