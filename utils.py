{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"script","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"def return_pred_and_label(dataset, count=-1):\n    predictions = tf.constant([], dtype=tf.int64)\n    y_true = tf.constant([], dtype=tf.int64)\n\n    for image, label in dataset.take(count):\n        y_pred = tf.cast((model.predict(image, verbose=0) >= 0.5).reshape(-1), dtype=tf.int64)\n        predictions = tf.concat([predictions, y_pred], -1)\n        y_true = tf.concat([y_true, label], -1)\n    return {'y_true':y_true, 'y_pred':predictions}","metadata":{"_uuid":"20b96948-e907-4c83-a552-b36c549e9355","_cell_guid":"8489cf57-f6c6-44cb-8202-5641750af6b9","collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2024-08-13T00:34:14.439080Z","iopub.execute_input":"2024-08-13T00:34:14.439873Z","iopub.status.idle":"2024-08-13T00:34:14.475131Z","shell.execute_reply.started":"2024-08-13T00:34:14.439833Z","shell.execute_reply":"2024-08-13T00:34:14.473709Z"},"trusted":true},"execution_count":1,"outputs":[{"traceback":["\u001b[0;36m  Cell \u001b[0;32mIn[1], line 1\u001b[0;36m\u001b[0m\n\u001b[0;31m    return {'y_true':y_true, 'y_pred':predictions}\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m 'return' outside function\n"],"ename":"SyntaxError","evalue":"'return' outside function (1500827041.py, line 1)","output_type":"error"}]}]}